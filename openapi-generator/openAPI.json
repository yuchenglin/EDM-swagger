{"info": {"version": "1.0.0", "title": "one_to_one API Reference"}, "paths": {"/class1/delete": {"delete": {"responses": {"200": {"description": "class1: delete successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/SingleData"}, "description": "Detele by data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class1"], "summary": "delete elements for class1", "consumes": ["application/json"]}}, "/class1/readAll": {"post": {"responses": {"200": {"description": "class1: readAll successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/SingleData"}, "description": "Read all by data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class1"], "summary": "readAll elements for class1", "consumes": ["application/json"]}}, "/class2/delete": {"delete": {"responses": {"200": {"description": "class2: delete successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/SingleData"}, "description": "Detele by data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class2"], "summary": "delete elements for class2", "consumes": ["application/json"]}}, "/class1/update": {"put": {"responses": {"200": {"description": "class1: update successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/UpdateByData"}, "description": "Update data by old data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class1"], "summary": "update elements for class1", "consumes": ["application/json"]}}, "/class1/create": {"post": {"responses": {"200": {"description": "class1: create successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/SingleData"}, "description": "Create with single data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class1"], "summary": "create elements for class1", "consumes": ["application/json"]}}, "/class2/create": {"post": {"responses": {"200": {"description": "class2: create successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/SingleData"}, "description": "Create with single data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class2"], "summary": "create elements for class2", "consumes": ["application/json"]}}, "/class2/update": {"put": {"responses": {"200": {"description": "class2: update successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/UpdateByData"}, "description": "Update data by old data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class2"], "summary": "update elements for class2", "consumes": ["application/json"]}}, "/class2/readOne": {"post": {"responses": {"200": {"description": "class2: readOne successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/SingleId"}, "description": "Read by id", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class2"], "summary": "readOne elements for class2", "consumes": ["application/json"]}}, "/class1/createMany": {"post": {"responses": {"200": {"description": "class1: createMany successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/MultiData"}, "description": "Create with multiple data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class1"], "summary": "createMany elements for class1", "consumes": ["application/json"]}}, "/class2/createMany": {"post": {"responses": {"200": {"description": "class2: createMany successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/MultiData"}, "description": "Create with multiple data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class2"], "summary": "createMany elements for class2", "consumes": ["application/json"]}}, "/class1/readOne": {"post": {"responses": {"200": {"description": "class1: readOne successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/SingleId"}, "description": "Read by id", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class1"], "summary": "readOne elements for class1", "consumes": ["application/json"]}}, "/class2/readAll": {"post": {"responses": {"200": {"description": "class2: readAll successfully"}}, "parameters": [{"schema": {"$ref": "#/definitions/SingleData"}, "description": "Read all by data", "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "tags": ["class2"], "summary": "readAll elements for class2", "consumes": ["application/json"]}}}, "schemes": ["http", "https"], "tags": [{"name": "class1", "description": "Everything aboutclass1"}, {"name": "class2", "description": "Everything aboutclass2"}], "basePath": "/one_to_one", "host": "localhost:2000", "definitions": {"SingleId": {"type": "object", "properties": {"username": {"type": "string", "example": "danny"}, "key": {"type": "string", "example": "1234567890"}, "collection": {"type": "string", "example": "class2"}}}, "UpdateByData": {"type": "object", "properties": {"oldData": {"type": "string", "example": "{\\'name\\': \\'test1\\'}"}, "username": {"type": "string", "example": "danny"}, "newData": {"type": "string", "example": "{\\'name\\': \\'test1\\'}"}, "collection": {"type": "string", "example": "class2"}, "key": {"type": "string", "example": "1234567890"}}}, "MultiData": {"type": "object", "properties": {"username": {"type": "string", "example": "danny"}, "data": {"type": "string", "example": "[{\\'name\\': \\'test1\\'}, {\\'name\\': \\'test2\\'}]"}, "key": {"type": "string", "example": "1234567890"}, "collection": {"type": "string", "example": "class2"}}}, "SingleData": {"type": "object", "properties": {"username": {"type": "string", "example": "danny"}, "data": {"type": "string", "example": "{\\'name\\': \\'test1\\'}"}, "key": {"type": "string", "example": "1234567890"}, "collection": {"type": "string", "example": "class2"}}}, "UpdateById": {"type": "object", "properties": {"username": {"type": "string", "example": "danny"}, "key": {"type": "string", "example": "1234567890"}, "newData": {"type": "string", "example": "{\\'name\\': \\'test1\\'}"}, "collection": {"type": "string", "example": "class2"}}}}, "swagger": "2.0"}